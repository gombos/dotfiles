# pip
#python3 -m pip install --upgrade pip
#python3 -m pip list --outdated --format=json | jq -r '.[] | "\(.name)==\(.latest_version)"' | xargs -n1 sudo pip3 install -U 2>/dev/null

#if [ -f /usr/local/bin/pacapt ]; then
#  /usr/local/bin/pacapt -Su --noconfirm
#fi

cd ~/.dotfiles && git pull && cd -

rm -rf ~/.cache/*

# for pincer
#mnt efi && cd $MNTDIR/efi/dotfiles && git pull

# for bestia
#mnt-efi_bestia && cd $MNTDIR/efi_bestia/dotfiles && git pull

#infra-provision-mac

if command -v mas &> /dev/null
then
  mas upgrade
fi

if command -v brew &> /dev/null
then
  brew upgrade
  brew cleanup --prune=all
  brew doctor
fi

#brew install fio micro rclone ripgrep ripgrep-all

#usrlocal
#if [[ `hostname -s` == "bestia" ]]; then
#  $DOTFILES/bin/packages-usrlocal
#fi

# docker
#sudo docker images |grep -v REPOSITORY|awk '{print $1}'|xargs -L1 sudo docker pull
#sudo docker ps -q | xargs sudo docker restart

#cd $DOTFILES/infra
#sudo docker-compose up -d --force-recreate --remove-orphans

# aws
#if [ -L /dev/disk/by-label/cloudimg-rootfs ]; then
#  sudo DEBIAN_FRONTEND=noninteractive apt-get update -y -qq -o Dpkg::Use-Pty=0
#  sudo DEBIAN_FRONTEND=noninteractive apt-get upgrade -y -qq -o Dpkg::Use-Pty=0
#fi
