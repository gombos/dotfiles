# Fast boot - set timeout to 1 sec
set timeout=1
set gfxpayload=keep

# Windows on OS SSD
menuentry 'Windows' --id win {
  search --no-floppy --label Windows --set=root
  ntldr /bootmgr
}

MODULES="module_blacklist=nouveau"

# rootovl - so that rootfs is mounted ro that it can be used as a base of development containers
OVERRIDE="acpi_enforce_resources=lax"

# systemd.volatile=no rootovl"

# EFI partition from OS disk, rootfs from BESTIA
# This will boot straight into backup rootfs
menuentry 'Bestia' --id linux_bestia {
  linux /kernel/vmlinuz $DEFAULT $RDEXEC $MODULES $SERVICES $OVERRIDE root=LABEL=linux_bestia
  initrd /kernel/initrd.img
}

# EFI from BESTIA, but rootfs from OS disk
# This will present grub menu selection again
menuentry 'Chain bestia' --id bestia {
  insmod configfile
  search --no-floppy --set root_bestia --label EFI_BESTIA
  set root=$root_bestia
  set prefix=($root)/grub
  configfile /grub/grub.cfg
}

# Dev
menuentry 'Dev Linux' --id linux_dev {
  linux /kernel/vmlinuz $DEFAULT $RDEXEC systemd.volatile=no rootovl $MODULES $SERVICES $OVERRIDE rootflags=subvol=linux-dev
  initrd /kernel/initrd.img
}

menuentry "Network boot (iPXE)" {
    linux16 /ipxe.lkrn
}

menuentry 'nfs' --id nfs {
  linux /kernel/vmlinuz root=/dev/nfs nfsroot=192.168.1.2:/run/media/linux/linux ro net.ifnames=0 $OVERRIDE ip=192.168.1.3::192.168.1.1:255.255.255.0:bestia:eth0:off systemd.wants=ssh-keygen rd.neednet=1
  initrd /kernel/initrd-nfs.img
}

menuentry 'squashfs' --id squashfs {
  linux /kernel/vmlinuz root=live:http://192.168.1.2/kucko.img ro rd.live.image rd.lvm=0 rd.luks=0 rd.md=0 rd.dm=0 rd.neednet=1
  initrd /kernel/initrd.img
}

# ip=dhcp
# overlayroot="tmpfs"
# ip=192.168.1.3::192.168.1.1:24:bestia:eth0:none
# systemd.volatile=state
# rd.debug rd.break
