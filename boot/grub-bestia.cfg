# Fast boot - set timeout to 1 sec
set timeout=1
set gfxpayload=keep

# Windows on OS SSD
menuentry 'Windows' --id win {
  search --no-floppy --label Windows --set=root
  ntldr /bootmgr
}

MODULES="module_blacklist=nouveau"

# rootovl - so that rootfs is mounted ro that it can be used as a base of development containers
OVERRIDE="acpi_enforce_resources=lax systemd.volatile=no rootovl"

# EFI partition from OS disk, rootfs from BESTIA
# This will boot straight into backup rootfs
menuentry 'Bestia' --id linux_bestia {
  linux /kernel/vmlinuz $DEFAULT $RDEXEC $MODULES $SERVICES $OVERRIDE root=LABEL=linux_bestia
  initrd /kernel/initrd.img
}

# EFI from BESTIA, but rootfs from OS disk
# This will present grub menu selection again
menuentry 'Chain bestia' --id bestia {
  insmod configfile
  search --no-floppy --set root_bestia --label EFI_BESTIA
  set root=$root_bestia
  set prefix=($root)/grub
  configfile /grub/grub.cfg
}

# Dev
menuentry 'Dev Linux' --id linux_dev {
  linux /kernel/vmlinuz $DEFAULT $RDEXEC systemd.volatile=no rootovl $MODULES $SERVICES $OVERRIDE rootflags=subvol=linux-dev
  initrd /kernel/initrd.img
}

# nfsroot
menuentry 'NFS root Linux' --id nfsroot {
  #root=nfs:192.168.1.2:/live/image ip=dhcp ip=192.168.1.3::192.168.1.1:24::eth0:none
  linux /kernel/vmlinuz net.ifnames=0 systemd.volatile=state ro nomodeset systemd.unit=multi-user.target debug ip=dhcp root=nfs:192.168.1.2:/live/image
  initrd /kernel/initrd.img
}
