set timeout=5
set default=linux_iso
set fallback=linux_iso_fallback

set CONSOLE="nomodeset systemd.unit=multi-user.target systemd.wants=getty@tty1.service"

# Default hostname
set h=csendes

# Read smbios (dmi)

# dmidecode -s bios-vendor
smbios --type 0 --get-string 4 --set smbios_bios

# Default partition label for iso files
set isolabel=EFI

# determine default menu item

# Default rootfs label
set l=linux

# Optical drive (CD/DVD) - bios boot
if [ "$root" == "hd31" ]; then
  root=(cd,msdos1)
  set default=linux_cdrom_chain
fi

# Optical drive (CD/DVD) - efi boot
if [ "$root" == "cd0" ]; then
  set default=linux_cdrom_chain
  #linux_cdrom
fi

# Test if running as a vm - vmware, qemu bios, qemu uefi, ovmf
if [ "$smbios_bios" == "VMware, Inc." -o "$smbios_bios" == "SeaBIOS" -o "$smbios_bios" == "EFI Development Kit II / OVMF" ]; then
  set timeout=1
  set timeout_style=hidden
  OVERRIDE="module_blacklist=pata_acpi,input_leds,i2c_piix4,serio_raw,joydev systemd.mask=udisks2 systemd.mask=ssh systemd.mask=bluetooth systemd.mask=vgauth systemd.mask=getty@tty1"
fi

# Test if running on baremetal
if ! [ "$default" == "linux_cdrom" ]; then
  # dmidecode -s baseboard-product-name
  smbios --type 2 --get-string 5 --set smbios_baseboard

  # dmidecode -s system-product-name
  smbios --type 1 --get-string 5 --set smbios_system

  if [ "$smbios_baseboard" == "DX79TO" ]; then
    set h=nagybestia
    set timeout=1
    OVERRIDE="systemd.unit=multi-user.target nomodeset module_blacklist=sb_edac systemd.machine_id=6a652608ca464b8db5b0270c340dfd23"
    set isolabel=EFI
  fi

  if [ "$smbios_baseboard" == "4391B84" ]; then
    # Lenovo W510
    set isolabel=Ventoy
    set h=w
  fi

  if [ "$smbios_baseboard" == "Default string" ]; then
    set h=bestia
    set default=linux_iso
    OVERRIDE="systemd.unit=multi-user.target net.ifnames=1 systemd.mask=systemd-resolved systemd.mask=bluetooth systemd.wants=docker systemd.wants=dnsmasq systemd.wants=apcupsd systemd.wants=rpcbind systemd.wants=nfs-server systemd.wants=rpc-statd systemd.machine_id=6a652608ca464b8db5b0270c340dfd23"
  fi

  if [ "$smbios_system" == "Z83-4" ]; then
    set h=desk
    OVERRIDE="reboot=bios module_blacklist=bluetooth,nouveau,cfg80211,dm_mirror,dw_dmac,dw_dmac_core systemd.mask=dmesg.service systemd.mask=getty@tty1.service"
  fi

  if [ "$smbios_system" == "Z83-4 Pro" ]; then
    set h=kispincer
    set isolabel=EFI
    set timeout=0

    # Disable Wifi, bluetooth, sound kernel modules
    # dw_dmac and dw_dmac_core can cause hang at reboot on Minix
    OVERRIDE="reboot=bios module_blacklist=bluetooth,nouveau,cfg80211,soundcore,dm_mirror,dw_dmac,dw_dmac_core systemd.mask=home systemd.mask=dmesg systemd.mask=getty@tty1 systemd.unit=multi-user.target"
  fi

  if [ "$smbios_baseboard" == "Mac-3CBD00234E554E41" ]; then
    set h=taska
  fi

  if [ "$smbios_baseboard" == "NP700G7C-S02US" ]; then
    set h=p
    set isolabel=EFI
  fi
fi

set DEFAULT_ISO="rd.live.overlay.overlayfs=1 root=live:/dev/disk/by-label/ISO systemd.hostname=$h net.ifnames=0 rd.driver.pre=exfat rd.retry=5"

if [ -s /config/grub.cfg ]; then
  source /config/grub.cfg
fi

set isolabel=Ventoy
set h=csendes

# todo - make a loop to inluce all initrd
#systemd.mask=dbus-fi.w1.wpa_supplicant1 systemd.mask=wpa_supplicant

menuentry linux_iso $DEFAULT_ISO $OVERRIDE  {
  search --no-floppy --label $isolabel --set=linuxroot
  set isofile="linux.iso"
  loopback loop ($linuxroot)/$isofile
  linux (loop)/kernel/vmlinuz iso-scan/filename=$isofile $* raid=noautodetect net.ifnames=1 systemd.mask=dnsmasq systemd.mask=vmware-USBArbitrator systemd.mask=vmware systemd.mask=vmware-workstation-server
  initrd (loop)/kernel/initrd*.img
}

# Allow to set default from environment block file
if [ -s /grubenv ]; then
  load_env --file /grubenv

  if [ "${once}" ]; then
    set default="$once"
    set once=
    save_env once
  fi
fi
