# If timeout is not set, boot process will not resume
set timeout=5

# boot from live disks
insmod biosdisk

# GPT partitions
insmod part_gpt

# MBR partitions
insmod part_msdos

# Regular expressions (e.g. for files)
insmod regexp

# additional video and graphics support
insmod all_video

# fat filesystem
insmod fat

# btrfs filesystem
insmod btrfs

# initramfs options for dracut
# rd.luks=0 - disable crypto LUKS detection
# rd.lvm=0 - disable LVM detection
# rd.md=0 - disable MD RAID detection
# rd.dm=0 - disable DM RAID detection
# rd.hostonly=0 - removes all compiled in configuration of the host system the initramfs image was built on

# kernel options
# root=LABEL=linux - boot form the partition with "linux" label
# rootflags=subvol=/linux - boot from /linux btrfs subvolume (and not the default filesystem subvolume)
# ro - mount root read-only
# systemd.volatile=overlay - overlay root and all the subfolders with tmpfs
# quiet - do not log to console during boot
# net.ifnames=0 - disable consistent network device naming

# btrfs is not builtin module in the kernel, so initrd is required to boot
# cat /lib/modules/$(uname -r)/modules.builtin | grep btrfs

set default=linux

# Per host configuration file
source /config/grub-onetime.cfg
source /config/grub-host.cfg

set DEFAULT="root=LABEL=linux rootfstype=btrfs rootflags=subvol=linux ro quiet net.ifnames=0 rd.luks=0 rd.lvm=0 rd.md=0 rd.dm=0 rd.hostonly=0 grub=$default"
set RDEXEC="vt.handoff=7 systemd.volatile=overlay rd.exec=dotfiles/boot/rootfsoverlay systemd.hostname=$h"

menuentry 'Linux' --id linux {
  linux /kernel/vmlinuz $DEFAULT $RDEXEC $MODULES $SERVICES $OVERRIDE
  initrd /kernel/initrd.img
}

menuentry 'Linux console' --id console {
  linux /kernel/vmlinuz $DEFAULT $RDEXEC nomodeset systemd.unit=multi-user.target $MODULES $SERVICES $OVERRIDE
  initrd /kernel/initrd.img
}

source /dotfiles/boot/grub-$h.cfg

menuentry 'Chain live' --id live {
  insmod configfile
  search --no-floppy --set root_bestia --label EFI_LIVE
  set root=$root_bestia
  set prefix=($root)/grub
  configfile /grub/grub.cfg
}

menuentry 'Chain bestia' --id bestia {
  insmod configfile
  search --no-floppy --set root_bestia --label EFI_BESTIA
  set root=$root_bestia
  set prefix=($root)/grub
  configfile /grub/grub.cfg
}

# default for live to avoid executing rd.exec
menuentry 'Linux root overlay' --id rootovl {
  linux /kernel/vmlinuz $DEFAULT rootovl $MODULES $SERVICES $OVERRIDE
  initrd /kernel/initrd.img
}

menuentry 'Empty /var' --id empty-var {
  linux /kernel/vmlinuz $DEFAULT systemd.volatile=state $MODULES $SERVICES $OVERRIDE
  initrd /kernel/initrd.img
}

menuentry 'Empty /var (console)' --id empty-var-console {
  linux /kernel/vmlinuz $DEFAULT systemd.volatile=state nomodeset systemd.unit=multi-user.target debug $MODULES $SERVICES $OVERRIDE
  initrd /kernel/initrd.img
}

# Disable services trying to write to /var/log or /var
menuentry 'Read-only (console)' --id ro-console {
  linux /kernel/vmlinuz $DEFAULT systemd.volatile=no nomodeset systemd.unit=multi-user.target systemd.mask=dmesg systemd.mask=systemd-update-utmp systemd.mask=systemd-update-utmp-runlevel debug $MODULES $SERVICES $OVERRIDE
  initrd /kernel/initrd.img
}

# Drop into shell after initramfs but before boot
menuentry 'Initrd Rescue shell (console)' --id initrd-shell {
  linux /kernel/vmlinuz $DEFAULT debug init=/bin/bash
  initrd /kernel/initrd.img
}

menuentry "TinyCore console" --id tinycore {
  set isofile="/tce/Core-12.0.iso"
  loopback loop $isofile
  linux (loop)/boot/vmlinuz iso=$isofile nozswap
  initrd (loop)/boot/core.gz
}
